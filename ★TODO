・バックエンドのNextとLambdaの役割範囲
    ・LambdaはDBからデータ抽出してデータ変換までやる？それともDBのロウデータを返すだけで、Nextでデータ変換までやる？
    ・個人的にはNextはLambdaを呼び出すだけで何もしない方がいいと思っているが、どうだろうか？
    ・もしLambdaで実現できなかった処理があれば、それだけはNextでやるという立て付け

・Nextバックエンドの役割（あくまでも基本方針、実際は柔軟さの方が大事）
    ・APIパラメタチェック
    ・Lambda呼び出し
    ・Lambdaからのレスポンスチェック
    ・どうしてもLambdaでできない処理

・ログ
    ・ログレベル
        ・デバッグ
        ・情報
        ・警告
        ・エラー
    ・フォーマット
        ・法人とPh1を参考
    ・出力箇所
        ・フロントエンド
            ・なし
        ・バックエンド
            ・Next
                ・API開始
                ・API終了
                ・Lambda処理結果
                ・例外（スタックトレース）
            ・Lambda
                ・Ph1合わせ

・エラーハンドリング
    ・エラーの画面表示
        ・帳票照会を例に考えてみる
            ・帳票一覧の取得に失敗
            ・ダウンロードに失敗
        ・機能単位の粒度で事足りると気がする、もしかしたら機能単位ではなく画面単位でも良い？
            ・帳票照会でエラーが発生しました
        ・法人に合わせるかどうか？法人はどうなんだろう？

    ・エラーレベル
        ・正常（0）
        ・異常（1）
        ・警告（2）→警告は一応設けるけどたぶん使わない（使うとしたらフロント内のみ）

    ・エラーレベルによる画面の出し分け
        ・正常
            ・メッセージを表示しない（処理に時間を要するものは別、正常に完了した旨を知らせる必要があるかも）
        ・異常
            ・エラーメッセージを表示
        ・警告
            ・ワーニングメッセージを表示

    ・フロントエンド
        ・エラーメッセージ表示機能の検討が必要（メッセージエリア？、モーダル？、画面遷移？）
            ・バックエンドの処理結果
                バックエンドが返したエラーレベルでエラーメッセージを表示
            ・フロント例外（エラーバウンダリー？）
            ・フロント処理で検知したエラーを表示（そんなケースがあるかどうかは不明）

    ・バックエンド
        ・Next-Lambdaで取り決めが必要か？（エラーコードなど）
        ・Lambda
            ・例外
            ・外部リソースエラー
                ・DB
                ・S3
                ・SESなど
        ・Next
            ・Lambdaでエラーが発生したとして何が原因で起きたかなど、詳細を把握する必要がある？ない気がするが、どうだろうか？
            ・LambdaはLambdaでエラーログ出力してアラート発報されるわけで、Nextでもエラーログ出力したらアラートがウザくないか？
            ・Nextではエラーが発生したとフロントに返すだけで、エラーログはLambdaに任せるという方針でいいのでは？
            ・こういうユースケースを考えてみるとX-Rayは有益なのかもしれない
    
・エラー関連の定数共通化
    ・Nextのフロント・バックで共通化可能か調査
    ・でも共通化するのはエラーレベル（正常、異常、警告）くらいで良さげか
    ・エラーコード、エラーメッセージの共通化がフロントで必要ならばフロント側で定義する

・エラーハンドリングの大方針
    ・決済ポータル（顧客）
        ・依頼先の成功・失敗だけを気にすればよい、依頼先が失敗したとして、その原因を自分が知る必要はない（エラー詳細の受け渡しは不要）
        ・顧客向けなので、フロントが画面出力するのはエラーメッセージのみ、画面単位であり機能単位ではない
    ・決済バック（社内）
        ・社員向けなので、フロントが画面出力するメッセージ粒度を検討する必要あり、たぶん画面単位ってわけにもいかないものもありそう
        ・ユーザと画面によって流動的に変化が求められそうだから、方針は設けないでおく

・日本語対応

